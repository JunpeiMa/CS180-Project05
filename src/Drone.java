import java.util.ArrayList;

/**
 * Project 5 -- Drone
 * <p>
 * This class creates a Drone that is a subclass of Vehicle.
 *
 * @author Kyle VandeWalle, Gloria Ma, lab sec 9
 * @version December 6, 2018
 */


public class Drone extends Vehicle {
    //    private ArrayList<Package> packages;
    final private double gasRate = 1.33;

    /**
     * Default Contructor
     */
    //============================================================================
    public Drone() {
    }
    //============================================================================

    /**
     * Constructor
     *
     * @param licensePlate license plate of vehicle
     * @param maxWeight    maximum weight that the vehicle can hold
     */
    //============================================================================
    public Drone(String licensePlate, double maxWeight) {
        super(licensePlate, maxWeight);
    }
    //============================================================================

    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */

    /**
     * Returns the profits generated by the packages currently in the Truck.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 1.33)
     * </p>
     */
    @Override
    public double getProfit() {
        double revenue = 0;
        int maxRange = 0;
        packages = getPackages();
        zipDest = getZipDest();
        for (Package p :
                this.packages) {
            revenue += p.getPrice();
            if (Math.abs(p.getDestination().getZipCode() - this.zipDest) > maxRange)
                maxRange = Math.abs(p.getDestination().getZipCode() - this.zipDest);
        }
        return revenue - maxRange * gasRate;
    }

    /**
     * Generates a String of the Drone report. Drone report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in truck</li>
     * </ul>
     *
     * @return Truck Report
     */
    @Override
    public String report() {
        String output = "==========Drone Report==========\n" +
                "License Plate No.: " + licensePlate + "\n" +
                "Destination: " + zipDest + "\n" +
                "Weight Load: " + String.format("%.2f", currentWeight) + "/" + String.format("%.2f", maxWeight) + "\n" +
                "Net Profit: $" + String.format("%.2f", this.getProfit()) + "\n=====Shipping Labels=====";
        for (int i = 0; i < packages.size(); i++) {
            output += (packages.get(i).shippingLabel() + "\n");
        }
        output += "\n==============================";

        return output;

    }


}
